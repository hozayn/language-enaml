fileTypes: [
  "enaml"
]
name: "Enaml"
patterns: [
  {
    begin: "^\\s*(enamldef)\\s+(?=[a-zA-Z_][a-zA-Z_0-9]*\\s*\\()"
    beginCaptures:
      "1":
        name: "storage.type.class.enaml"
    comment: "enamldef declaration"
    end: '''
      (\\))\\s*(?:(?:\\:\\s*([a-zA-Z_][a-zA-Z_0-9]*)\\s*(\\:))|(\\:)|(.*$
      ?))
    '''
    endCaptures:
      "1":
        name: "punctuation.definition.inheritance.end.enaml"
      "2":
        name: "variable.language.enaml"
      "3":
        name: "punctuation.section.class.begin.enaml"
      "4":
        name: "punctuation.section.class.begin.enaml"
      "5":
        name: "invalid.illegal.missing-section-begin.enaml"
    name: "meta.class.enaml"
    patterns: [
      {
        begin: "(?=[A-Za-z_][A-Za-z0-9_]*)"
        contentName: "entity.name.type.class.enaml"
        end: "(?![A-Za-z0-9_])"
        patterns: [
          {
            include: "#entity_name_class"
          }
        ]
      }
      {
        begin: "(\\()"
        beginCaptures:
          "1":
            name: "punctuation.definition.inheritance.begin.enaml"
        contentName: "meta.class.inheritance.enaml"
        end: "(?=\\))"
        patterns: [
          {
            begin: "(?<=\\(|,)\\s*"
            contentName: "entity.other.inherited-class.enaml"
            end: "\\s*(?:(,)|(?=\\)))"
            endCaptures:
              "1":
                name: "punctuation.separator.inheritance.python"
            patterns: [
              {
                include: "source.python"
              }
            ]
          }
        ]
      }
    ]
  }
  {
    begin: "^\\s*(template)\\s+(?=[a-zA-Z_][a-zA-Z_0-9]*\\s*\\()"
    beginCaptures:
      "1":
        name: "storage.type.function.enaml"
    comment: "template declaration"
    end: '''
      (\\))\\s*(?:(\\:)|(.*$
      ?))
    '''
    endCaptures:
      "1":
        name: "punctuation.definition.parameters.end.enaml"
      "2":
        name: "punctuation.section.function.begin.enaml"
      "3":
        name: "invalid.illegal.missing-section-begin.enaml"
    name: "meta.function.enaml"
    patterns: [
      {
        begin: "(?=[A-Za-z_][A-Za-z0-9_]*)"
        contentName: "entity.name.function.enaml"
        end: "(?![A-Za-z0-9_])"
        patterns: [
          {
            include: "#entity_name_function"
          }
        ]
      }
      {
        begin: "(\\()"
        beginCaptures:
          "1":
            name: "punctuation.definition.parameters.begin.enaml"
        contentName: "meta.function.parameters.enaml"
        end: "(?=\\)\\s*\\:)"
        patterns: [
          {
            include: "#keyword_arguments"
          }
          {
            captures:
              "1":
                name: "variable.parameter.function.enaml"
              "2":
                name: "punctuation.separator.parameters.enaml"
            match: '''
              \\b([a-zA-Z_][a-zA-Z_0-9]*)\\s*(?:(,)|(?=[
              \\)]))
            '''
          }
        ]
      }
    ]
  }
  {
    begin: "^\\s*(func)\\s+(?=[a-zA-Z_][a-zA-Z_0-9]*\\s*\\()"
    beginCaptures:
      "1":
        name: "storage.type.function.enaml"
    comment: "function declaration"
    end: '''
      (\\))\\s*(?:(\\:)|(.*$
      ?))
    '''
    endCaptures:
      "1":
        name: "punctuation.definition.parameters.end.enaml"
      "2":
        name: "punctuation.section.function.begin.enaml"
      "3":
        name: "invalid.illegal.missing-section-begin.enaml"
    name: "meta.function.enaml"
    patterns: [
      {
        begin: "(?=[A-Za-z_][A-Za-z0-9_]*)"
        contentName: "entity.name.function.enaml"
        end: "(?![A-Za-z0-9_])"
        patterns: [
          {
            include: "#entity_name_function"
          }
        ]
      }
      {
        begin: "(\\()"
        beginCaptures:
          "1":
            name: "punctuation.definition.parameters.begin.enaml"
        contentName: "meta.function.parameters.enaml"
        end: "(?=\\)\\s*\\:)"
        patterns: [
          {
            include: "#keyword_arguments"
          }
          {
            captures:
              "1":
                name: "variable.parameter.function.enaml"
              "2":
                name: "punctuation.separator.parameters.enaml"
            match: '''
              \\b([a-zA-Z_][a-zA-Z_0-9]*)\\s*(?:(,)|(?=[
              \\)]))
            '''
          }
        ]
      }
    ]
  }
  {
    begin: "^\\s*(?=[a-zA-Z_][a-zA-Z_0-9]*\\s*=>\\s*\\()"
    comment: "function override"
    end: '''
      (\\))\\s*(?:(\\:)|(.*$
      ?))
    '''
    endCaptures:
      "1":
        name: "punctuation.definition.parameters.end.enaml"
      "2":
        name: "punctuation.section.function.begin.enaml"
      "3":
        name: "invalid.illegal.missing-section-begin.enaml"
    name: "meta.function.enaml"
    patterns: [
      {
        captures:
          "1":
            name: "keyword.operator"
        match: "[A-Za-z_][A-Za-z0-9_]*\\s*(=>)\\s*"
      }
      {
        begin: "(\\()"
        beginCaptures:
          "1":
            name: "punctuation.definition.parameters.begin.enaml"
        contentName: "meta.function.parameters.enaml"
        end: "(?=\\)\\s*\\:)"
        patterns: [
          {
            include: "#keyword_arguments"
          }
          {
            captures:
              "1":
                name: "variable.parameter.function.enaml"
              "2":
                name: "punctuation.separator.parameters.enaml"
            match: '''
              \\b([a-zA-Z_][a-zA-Z_0-9]*)\\s*(?:(,)|(?=[
              \\)]))
            '''
          }
        ]
      }
    ]
  }
  {
    begin: "^\\s+([a-zA-Z_][a-zA-Z_0-9]*)\\s*(?=\\(.*?\\).*?\\:\\s*$)"
    beginCaptures:
      "1":
        name: "entity.name.tag"
    comment: "template instantiation"
    end: "\\:\\s*$"
    name: "meta.function-call.enaml"
    patterns: [
      {
        begin: "(\\()"
        beginCaptures:
          "1":
            name: "punctuation.definition.arguments.begin.enaml"
        contentName: "meta.function-call.arguments.enaml"
        end: "(\\))\\s*(?=\\:)"
        endCaptures:
          "1":
            name: "punctuation.definition.arguments.end.enaml"
        patterns: [
          {
            include: "source.python"
          }
        ]
      }
      {
        begin: "\\s*(?=\\*?\\s*[a-zA-Z_][a-zA-Z_0-9]*)"
        end: "(?=\\:)"
        patterns: [
          {
            captures:
              "1":
                name: "variable.language.enaml"
              "2":
                name: "punctuation.separator.arguments.enaml"
            match: "\\s*\\*?\\s*([a-zA-Z_][a-zA-Z_0-9]*)\\s*(,)?\\s*"
          }
        ]
      }
    ]
  }
  {
    captures:
      "1":
        name: "entity.name.tag"
      "2":
        name: "variable.language.enaml"
      "3":
        name: "punctuation.section.class.begin.enaml"
    comment: "declarative instantiation"
    match: "^\\s+([A-Za-z_][A-Za-z0-9_]*)\\s*(?:\\:\\s*([a-zA-Z_][a-zA-Z_0-9]*)\\s*)?(\\:)\\s*$"
    name: "meta.class-instantiation.enaml"
  }
  {
    captures:
      "1":
        name: "storage.modifier"
      "2":
        name: "entity.other.attribute-name"
    comment: "storage declaration"
    match: "^\\s+(attr|event|const)\\s+([A-Za-z_][A-Za-z_0-9]*)\\s*$"
  }
  {
    captures:
      "1":
        name: "storage.modifier"
      "2":
        name: "entity.other.attribute-name"
      "3":
        name: "entity.name.tag"
    comment: "storage declaration with type"
    match: "^\\s+(attr|event|const)\\s+([A-Za-z_][A-Za-z_0-9]*)\\s*:\\s*([A-Za-z_][A-Za-z_0-9]*)\\s*$"
  }
  {
    begin: "^\\s+(attr|event|const)\\s+([A-Za-z_][A-Za-z_0-9]*)\\s*(=|:=|<<|>>|::)"
    beginCaptures:
      "1":
        name: "storage.modifier"
      "2":
        name: "entity.other.attribute-name"
      "3":
        name: "keyword.operator"
    comment: "storage declaration with binding"
    end: "$"
    patterns: [
      {
        include: "source.python"
      }
    ]
  }
  {
    begin: "^\\s+(attr|event|const)\\s+([A-Za-z_][A-Za-z_0-9]*)\\s*:\\s*([A-Za-z_][A-Za-z_0-9]*)\\s*(=|:=|<<|>>|::)"
    beginCaptures:
      "1":
        name: "storage.modifier"
      "2":
        name: "entity.other.attribute-name"
      "3":
        name: "entity.name.tag"
      "4":
        name: "keyword.operator"
    comment: "storage declaration with type and binding"
    end: "$"
    patterns: [
      {
        include: "source.python"
      }
    ]
  }
  {
    captures:
      "1":
        name: "storage.modifier"
      "2":
        name: "entity.other.attribute-name"
    comment: "alias definition single"
    match: "^\\s+(alias)\\s+([A-Za-z_][A-Za-z_0-9]*)\\s*$"
  }
  {
    begin: "^\\s+(alias)\\s+([A-Za-z_][A-Za-z_0-9]*)\\s*\\:\\s*"
    beginCaptures:
      "1":
        name: "storage.modifier"
      "2":
        name: "entity.other.attribute-name"
    comment: "alias definition extended"
    end: "\\s*$"
    patterns: [
      {
        begin: "(?=[A-Za-z_][A-Za-z0-9_]*(?:\\.[A-Za-z_][A-Za-z0-9_]*)*)"
        end: "(?![A-Za-z0-9_\\.])"
        patterns: [
          {
            captures:
              "1":
                name: "entity.other.attribute-name"
            match: "\\.([A-Za-z_][A-Za-z0-9_]*)"
          }
          {
            captures:
              "1":
                name: "entity.other.attribute-name"
            match: "(?<!\\.)([A-Za-z_][A-Za-z0-9_]*)"
          }
        ]
      }
    ]
  }
  {
    begin: "^\\s+([A-Za-z_][A-Za-z_0-9\\.]*)\\s*(=|:=|<<|>>|::)"
    beginCaptures:
      "2":
        name: "keyword.operator"
    comment: "expression binding"
    end: "$"
    patterns: [
      {
        include: "source.python"
      }
    ]
  }
  {
    include: "source.python"
  }
]
scopeName: "source.python.enaml"
